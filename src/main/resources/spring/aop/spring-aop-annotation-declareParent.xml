<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--spring自动扫描bean定义并装配-->
    <context:component-scan base-package="com.chujun.spring.demo.aop">
    </context:component-scan>


    <!--创建一个AnnotationAwareAspectJAutoProxyCreator类,自动代理一些Bean，如@Aspect注解的切面-->
    <!--需要注意的是：该配置仅仅使用@AspectJ注解作为指引创建基于代理的切面，而没有创建AspectJ切面，本质上还是Spring风格的切面，
    仍陷于Spring代理方法的调用，想利用AspectJ的所有能力，还必须在运行时使用AspectJ而不是依赖Spring来创建基于代理的切面-->
    <aop:aspectj-autoproxy />
</beans>
