<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
         <!--default-init-method="turnOnLights" default-destroy-method="turnOffLights"-->


    <!-- id:bean唯一标识，在spring容器当中引用 -->
    <bean id="poeticDuke" class="com.chujun.spring.demo.first.service.impl.PoeticJuggler">
        <!-- duke成为世界级杂技表演者 -->
        <constructor-arg value="15"/>
        <constructor-arg ref="sonnet29"/>
    </bean>
    <!--Poem sonnet29=new Sonnet29();
    Performer poeticDuke=new com.chujun.spring.demo.first.service.impl.Juggler(15,sonnet29),解析xml文件利用反射创建Bean -->

    <bean id="sonnet29" class="com.chujun.spring.demo.first.service.impl.Sonnet29"></bean>

    <!--one stage-->
    <bean id="oneStage" class="com.chujun.spring.demo.first.service.Stage" factory-method="getInstance"></bean>

    <!--bean作用域prototype-->
    <bean id="ticket" class="com.chujun.spring.demo.first.domain.Ticket" scope="singleton"></bean>
    <!--Ticket ticket=new Ticket();-->
    <bean id="twoTicket" class="com.chujun.spring.demo.first.domain.Ticket" scope="singleton"></bean>
    <!--Ticket twoTicket=new Ticket();//所以两次声明出来的spring单例Bean不是同一个实例-->

    <bean id="auditorium" class="com.chujun.spring.demo.first.service.Auditorium" init-method="turnOnLights" destroy-method="turnOffLights"></bean>
    <!--有了默认初始化方法-->
    <!--<bean id="auditorium" class="com.chujun.spring.demo.first.service.Auditorium"></bean>-->

    <bean id="saxophone" class="com.chujun.spring.demo.first.service.impl.Saxophone"/>
    <bean id="kenny" class="com.chujun.spring.demo.first.service.impl.Instrumentalist">
        <!--spring将根据Bean属性的类型自动判断value值的正确类型：简单类型还是String类型-->
        <property name="age" value="25"/>
        <property name="song" value="Jingle Bells"/>
        <property name="instrument" ref="saxophone"/>
    </bean>
</beans>
